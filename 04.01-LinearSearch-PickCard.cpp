/*******************************************************
 * File        : 04.01-LinearSearch-PickCard.cpp
 * Description : 扑克查找
 * Author      : Teacher
 * Date        : 2025-04-12
 * 题目:
 *      手里的13张扑克牌，我想要找知道有没有黑桃Q，
 *      有的话，它在什么位置。
 * 
 * 解题思路:
 *      初始化13张扑克牌；
 * 
 *      假设没有黑桃Q;
 *      依次枚举每张牌
 *          若是黑桃Q;
 *              记下位置；
 *              停止枚举；
 *      
 *      如果找到
 *          输出位置；
 *      否则
 *          输出为找到。
 * 
 * 解析：
 *      如何表示扑克牌？ 扑克牌总共有52张牌，
 *      char字符表达的范围为-128-127，是够用的。
 *      int及double更是够用。
 *      这里我们用这个思路，每个花色牌面为1-K，也就是13张
 *      共4个花色，我们考虑用（花色+牌面）组合来表示。
 *      花色 （1-4），牌面（1-13）
 *      则范围为101-413，我们考虑用int类型。
 * 
 *      手牌，需要（花色+牌面），也需要记录位置。
 *      因此需要引入数组。
 *******************************************************/

#include <iostream>
using namespace std;
 
int main() {

    int cards[13] = {101, 113, 303, 206, 405, 208,
                    313, 304, 410, 309, 112, 207, 402};
    
    int pos = -1;
    for(int i = 0; i <=13 ; i++)
        if(cards[i] == 112){
            pos = i;
            break;
        }
    if (pos != -1)
        cout << "黑桃Q为第" << pos + 1 << "张" << endl;
    else
        cout << "无此牌" << endl;
    
    return 0;

}